[
    {
        "id": "cc4c2641.73d7f8",
        "type": "tab",
        "label": "Waschkueche neu",
        "disabled": false,
        "info": ""
    },
    {
        "id": "6ac89b45.c8501c",
        "type": "tab",
        "label": "Temperatures",
        "disabled": false,
        "info": ""
    },
    {
        "id": "349e2169.f8eef6",
        "type": "tab",
        "label": "relais control",
        "disabled": false,
        "info": ""
    },
    {
        "id": "487f2fa7.5bc748",
        "type": "tab",
        "label": "soilsensors",
        "disabled": false,
        "info": ""
    },
    {
        "id": "cb82b285.f3d9d8",
        "type": "tab",
        "label": "stromzaehler",
        "disabled": false,
        "info": ""
    },
    {
        "id": "1135366e.c0dd02",
        "type": "tab",
        "label": "Tasmota",
        "disabled": false,
        "info": ""
    },
    {
        "id": "933138b6.5fb708",
        "type": "tab",
        "label": "influx admin",
        "disabled": false,
        "info": ""
    },
    {
        "id": "1901392b.41301f",
        "type": "mqtt-broker",
        "z": "",
        "name": "",
        "broker": "mosquitto",
        "port": "1883",
        "clientid": "nodered",
        "usetls": false,
        "compatmode": true,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "closeTopic": "",
        "closeRetain": "false",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": ""
    },
    {
        "id": "fb1b7c16.1000b",
        "type": "ui_base",
        "theme": {
            "name": "theme-custom",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "Georgia,Georgia,serif",
                "reset": false
            },
            "themeState": {
                "base-color": {
                    "default": "#4B7930",
                    "value": "#4B7930",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#008cb4",
                    "edited": true
                },
                "page-backgroundColor": {
                    "value": "#7a7a7a",
                    "edited": true
                },
                "page-sidebar-backgroundColor": {
                    "value": "#434343",
                    "edited": true
                },
                "group-textColor": {
                    "value": "#d7d7d7",
                    "edited": true
                },
                "group-borderColor": {
                    "value": "#555555",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#eeeeee",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#00a3d8",
                    "edited": true
                },
                "widget-borderColor": {
                    "value": "#333333",
                    "edited": true
                },
                "base-font": {
                    "value": "Georgia,Georgia,serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 4,
                "gy": 4,
                "cx": 4,
                "cy": 4,
                "px": 2,
                "py": 2
            }
        }
    },
    {
        "id": "c6acaaca.c1f1c8",
        "type": "ui_tab",
        "z": "",
        "name": "Waschküche",
        "icon": "pan_tool",
        "order": 1
    },
    {
        "id": "fe171fef.fba83",
        "type": "telegram bot",
        "z": "",
        "botname": "Waschküche",
        "usernames": "Echtibot",
        "chatids": "",
        "baseapiurl": "",
        "pollinterval": "",
        "usesocks": false,
        "sockshost": "",
        "socksport": "",
        "socksusername": "",
        "sockspassword": "",
        "bothost": "",
        "localbotport": "",
        "publicbotport": "",
        "privatekey": "",
        "certificate": "",
        "useselfsignedcertificate": false,
        "sslterminated": false,
        "verboselogging": false
    },
    {
        "id": "711aac66.572884",
        "type": "ui_tab",
        "z": "",
        "name": "Tempsensor",
        "icon": "dashboard",
        "order": 4
    },
    {
        "id": "583d0967.1e2478",
        "type": "tls-config",
        "z": "",
        "name": "local-tls",
        "cert": "",
        "key": "",
        "ca": "",
        "certname": "",
        "keyname": "",
        "caname": "",
        "verifyservercert": false
    },
    {
        "id": "3e884a07.66168e",
        "type": "ui_group",
        "z": "",
        "name": "test",
        "tab": "b8ed5981.57d02",
        "disp": true,
        "width": "20",
        "collapse": false
    },
    {
        "id": "b8ed5981.57d02",
        "type": "ui_tab",
        "z": "",
        "name": "test",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "52780328.1b9e5c",
        "type": "influxdb",
        "z": "",
        "hostname": "192.168.2.40",
        "port": "8086",
        "protocol": "http",
        "database": "dbhome",
        "name": "influxSSD",
        "usetls": false,
        "tls": "583d0967.1e2478"
    },
    {
        "id": "ea783497.5adc2",
        "type": "influxdb out",
        "z": "6ac89b45.c8501c",
        "influxdb": "52780328.1b9e5c",
        "name": "",
        "measurement": "",
        "precision": "",
        "retentionPolicy": "",
        "x": 680,
        "y": 120,
        "wires": []
    },
    {
        "id": "72905134.c859f8",
        "type": "mqtt in",
        "z": "cb82b285.f3d9d8",
        "name": "",
        "topic": "keller/stromzaehler",
        "qos": "2",
        "datatype": "utf8",
        "broker": "1901392b.41301f",
        "x": 230,
        "y": 580,
        "wires": [
            [
                "8a237855.1b1258",
                "c3208f68.596db",
                "c5f4dfd4.aa79a",
                "cba8be28.88884"
            ]
        ]
    },
    {
        "id": "1c3aab48.dde6c5",
        "type": "debug",
        "z": "cb82b285.f3d9d8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 730,
        "y": 580,
        "wires": []
    },
    {
        "id": "8a237855.1b1258",
        "type": "function",
        "z": "cb82b285.f3d9d8",
        "name": "",
        "func": "msg.number = parseInt(msg.payload);\nmsg.payload=msg.number;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 490,
        "y": 580,
        "wires": [
            [
                "1c3aab48.dde6c5",
                "d01359d1.f926c8"
            ]
        ]
    },
    {
        "id": "d01359d1.f926c8",
        "type": "ui_chart",
        "z": "cb82b285.f3d9d8",
        "name": "",
        "group": "3e884a07.66168e",
        "order": 0,
        "width": "20",
        "height": "12",
        "label": "chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 1,
        "x": 710,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "c3208f68.596db",
        "type": "rbe",
        "z": "cb82b285.f3d9d8",
        "name": "",
        "func": "deadbandEq",
        "gap": "6",
        "start": "",
        "inout": "in",
        "property": "payload",
        "x": 410,
        "y": 760,
        "wires": [
            []
        ]
    },
    {
        "id": "58d96e33.a40138",
        "type": "debug",
        "z": "cb82b285.f3d9d8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 690,
        "y": 680,
        "wires": []
    },
    {
        "id": "c5f4dfd4.aa79a",
        "type": "function",
        "z": "cb82b285.f3d9d8",
        "name": "",
        "func": "msg.number = parseInt(msg.payload);\nmsg.payload=msg.number;\n\nif (msg.number >= 65){\n    msg.counter = true;\n}else return \n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 490,
        "y": 540,
        "wires": [
            [
                "e2137374.12064"
            ]
        ]
    },
    {
        "id": "e2137374.12064",
        "type": "debug",
        "z": "cb82b285.f3d9d8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "counter",
        "targetType": "msg",
        "x": 730,
        "y": 540,
        "wires": []
    },
    {
        "id": "cba8be28.88884",
        "type": "function",
        "z": "cb82b285.f3d9d8",
        "name": "variable umbauen",
        "func": "msg.raw = msg.payload;\nmsg.measurement = \"stomverbrauch\"\nmsg.payload = [{\n    analogValue: Number(msg.raw),\n    average: flow.get('average')|| 0\n    },\n    {\n    DeviceType:\"nodeMCU\",\n    origin :\"stromzaehler\",\n    SensorType : \"tcrt5000\",\n    location : \"stromkastenkeller\"\n}];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 490,
        "y": 680,
        "wires": [
            [
                "58d96e33.a40138",
                "d69a1b82.db3fd"
            ]
        ]
    },
    {
        "id": "d69a1b82.db3fd",
        "type": "influxdb out",
        "z": "cb82b285.f3d9d8",
        "influxdb": "52780328.1b9e5c",
        "name": "",
        "measurement": "",
        "precision": "",
        "retentionPolicy": "",
        "x": 700,
        "y": 720,
        "wires": []
    },
    {
        "id": "f91c491e.4cc888",
        "type": "mqtt in",
        "z": "6ac89b45.c8501c",
        "name": "DHT22 NodeMCU Wohnzimmer",
        "topic": "wohnung/tempsensor1",
        "qos": "2",
        "datatype": "utf8",
        "broker": "1901392b.41301f",
        "x": 170,
        "y": 120,
        "wires": [
            [
                "3bba4e1a.4ba1f2"
            ]
        ]
    },
    {
        "id": "34170b69.9c9584",
        "type": "debug",
        "z": "6ac89b45.c8501c",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "true",
        "x": 670,
        "y": 80,
        "wires": []
    },
    {
        "id": "3bba4e1a.4ba1f2",
        "type": "function",
        "z": "6ac89b45.c8501c",
        "name": "Create influx Object",
        "func": "msg.array = msg.payload.split(\",\");\n\nmsg.temp = parseFloat(msg.array[0].split(\":\")[1]);\nmsg.humid = parseFloat(msg.array[1].split(\":\")[1]);\nmsg.heatIndex = parseFloat(msg.array[2].split(\":\")[1]);\n\n\nmsg.measurement = \"tempsensors\"\nmsg.payload = [{\n    temperature : msg.temp,\n    humidity : msg.humid,\n    heatIndex : msg.heatIndex\n    },\n    {\n    DeviceType:\"nodeMCU\",\n    SensorType : \"DHT22\",\n    origin :\"tempsensor1\",\n    location : \"wohnzimmer\"\n}];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 460,
        "y": 120,
        "wires": [
            [
                "34170b69.9c9584",
                "ea783497.5adc2"
            ]
        ]
    },
    {
        "id": "c5b0b166.3bbfd",
        "type": "influxdb out",
        "z": "6ac89b45.c8501c",
        "influxdb": "52780328.1b9e5c",
        "name": "",
        "measurement": "",
        "precision": "",
        "retentionPolicy": "",
        "x": 680,
        "y": 280,
        "wires": []
    },
    {
        "id": "735564c0.01d9a4",
        "type": "mqtt in",
        "z": "6ac89b45.c8501c",
        "name": "BME280 NodeMCU collector",
        "topic": "wohnung/climate",
        "qos": "2",
        "datatype": "utf8",
        "broker": "1901392b.41301f",
        "x": 160,
        "y": 240,
        "wires": [
            [
                "4e4793e1.78267c"
            ]
        ]
    },
    {
        "id": "20977c7d.0da02c",
        "type": "debug",
        "z": "6ac89b45.c8501c",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "true",
        "x": 670,
        "y": 240,
        "wires": []
    },
    {
        "id": "4e4793e1.78267c",
        "type": "function",
        "z": "6ac89b45.c8501c",
        "name": "Create influx Object",
        "func": "msg.array = msg.payload.split(\",\");\n\nmsg.origin =        msg.array[0].split(\": \")[1];\nmsg.temperature =   parseFloat(msg.array[1].split(\":\")[1]);\nmsg.humidity =      parseFloat(msg.array[2].split(\":\")[1]);\nmsg.pressure =      (parseFloat(msg.array[3].split(\":\")[1]))/100;\nmsg.altitude =      parseFloat(msg.array[4].split(\":\")[1]);\n\nif(msg.origin === \"weather2\"){\n    msg.location = \"schlafzimmer\";\n}else if (msg.origin === \"weather3\"){\n    msg.location = \"buero\";\n}else if (msg.origin === \"soilweather1\"){\n    msg.location = \"balkon\";\n}\n\nmsg.measurement = \"tempsensors\"\nmsg.payload = [{\n    temperature : msg.temperature,\n    humidity : msg.humidity,\n    pressure : msg.pressure,\n    altitude : msg.altitude\n    },\n    {\n    DeviceType:\"nodeMCU\",\n    SensorType : \"BME280\",\n    origin : msg.origin,\n    location : msg.location\n}];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 460,
        "y": 240,
        "wires": [
            [
                "20977c7d.0da02c",
                "c5b0b166.3bbfd"
            ]
        ]
    },
    {
        "id": "2923bb26.431e4c",
        "type": "mqtt in",
        "z": "cb82b285.f3d9d8",
        "name": "",
        "topic": "keller/stromzaehler",
        "qos": "2",
        "datatype": "auto",
        "broker": "1901392b.41301f",
        "x": 240,
        "y": 500,
        "wires": [
            [
                "51139a6a.bbcb44"
            ]
        ]
    },
    {
        "id": "36dd56c1.728d9a",
        "type": "debug",
        "z": "cb82b285.f3d9d8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "raw",
        "targetType": "msg",
        "x": 660,
        "y": 480,
        "wires": []
    },
    {
        "id": "56e86a8b.bdcc84",
        "type": "mqtt in",
        "z": "487f2fa7.5bc748",
        "name": "",
        "topic": "wohnung/soil",
        "qos": "2",
        "datatype": "auto",
        "broker": "1901392b.41301f",
        "x": 170,
        "y": 220,
        "wires": [
            [
                "3f2ee2ac.233a56"
            ]
        ]
    },
    {
        "id": "3f2ee2ac.233a56",
        "type": "function",
        "z": "487f2fa7.5bc748",
        "name": "Create influx Object",
        "func": "msg.array = msg.payload.split(\",\");\n\nmsg.origin =        msg.array[0].split(\": \")[1];\nmsg.moisture1 =   parseFloat(msg.array[1].split(\":\")[1]);\nmsg.moisture2 =   parseFloat(msg.array[2].split(\":\")[1]);\nmsg.moisture3 =   parseFloat(msg.array[3].split(\":\")[1]);\nmsg.moisture4 =   parseFloat(msg.array[4].split(\":\")[1]);\nmsg.moisture5 =   parseFloat(msg.array[5].split(\":\")[1]);\n\n\n\n\n\nmsg.measurement = \"balcony\"\nmsg.payload = [{\n    moisture1: msg.moisture1,\n    moisture2: msg.moisture2,\n    moisture3: msg.moisture3,\n    moisture4: msg.moisture4,\n    moisture5: msg.moisture5,\n    },\n    {\n    DeviceType:\"nodeMCU\",\n    SensorType : \"capacitivesoilsensorv2\",\n    origin : msg.origin,\n    location : \"balkon\"\n}];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 430,
        "y": 220,
        "wires": [
            [
                "e13c715e.425c18",
                "811b7ad0.e04f9"
            ]
        ]
    },
    {
        "id": "e13c715e.425c18",
        "type": "debug",
        "z": "487f2fa7.5bc748",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 650,
        "y": 220,
        "wires": []
    },
    {
        "id": "29296e48.487b82",
        "type": "inject",
        "z": "349e2169.f8eef6",
        "name": "",
        "topic": "",
        "payload": "1",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 250,
        "y": 260,
        "wires": [
            [
                "62a9e388.fbdc04"
            ]
        ]
    },
    {
        "id": "e7e18b9.3b27a78",
        "type": "inject",
        "z": "349e2169.f8eef6",
        "name": "",
        "topic": "",
        "payload": "0",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 250,
        "y": 320,
        "wires": [
            [
                "62a9e388.fbdc04"
            ]
        ]
    },
    {
        "id": "62a9e388.fbdc04",
        "type": "mqtt out",
        "z": "349e2169.f8eef6",
        "name": "",
        "topic": "pump",
        "qos": "",
        "retain": "",
        "broker": "1901392b.41301f",
        "x": 560,
        "y": 280,
        "wires": []
    },
    {
        "id": "811b7ad0.e04f9",
        "type": "influxdb out",
        "z": "487f2fa7.5bc748",
        "influxdb": "52780328.1b9e5c",
        "name": "",
        "measurement": "",
        "precision": "",
        "retentionPolicy": "",
        "x": 660,
        "y": 160,
        "wires": []
    },
    {
        "id": "51139a6a.bbcb44",
        "type": "function",
        "z": "cb82b285.f3d9d8",
        "name": "",
        "func": "msg.raw = Number(msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 450,
        "y": 500,
        "wires": [
            [
                "36dd56c1.728d9a"
            ]
        ]
    },
    {
        "id": "f9bf982b.1e0098",
        "type": "influxdb in",
        "z": "cb82b285.f3d9d8",
        "influxdb": "52780328.1b9e5c",
        "name": "get last 6 values",
        "query": "SELECT * FROM stomverbrauch GROUP BY * ORDER BY DESC LIMIT 6",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "x": 400,
        "y": 140,
        "wires": [
            [
                "3ebdf1d9.a6b496"
            ]
        ]
    },
    {
        "id": "44748cac.c38aa4",
        "type": "inject",
        "z": "cb82b285.f3d9d8",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 200,
        "y": 140,
        "wires": [
            [
                "f9bf982b.1e0098"
            ]
        ]
    },
    {
        "id": "7ec24a9c.e3a754",
        "type": "debug",
        "z": "cb82b285.f3d9d8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 790,
        "y": 140,
        "wires": []
    },
    {
        "id": "3ebdf1d9.a6b496",
        "type": "function",
        "z": "cb82b285.f3d9d8",
        "name": "",
        "func": "var v1 = msg.payload[0].analogValue;\nvar v2 = msg.payload[1].analogValue;\nvar v3 = msg.payload[2].analogValue;\nvar v4 = msg.payload[3].analogValue;\nvar v5 = msg.payload[4].analogValue;\nvar v6 = msg.payload[5].analogValue;\n//var v7 = msg.payload[6].analogValue;\n//var v8 = msg.payload[7].analogValue;\n//var v9 = msg.payload[8].analogValue;\n//var v10 = msg.payload[9].analogValue;\n//+v7+v8+v9+v10\n\nmsg.average = (v1+v2+v3+v4+v5+v6)/6;\nflow.set('average',msg.average);\n\nif(flow.get('marker') === 1){\n    msg.marker = 0;\n    flow.set('marker', msg.marker);\n}else if(msg.average >= 59){\n    msg.marker = 1;\n    flow.set('marker', msg.marker);\n    \n    msg.counter = (flow.get('counter')||0) +1;\n    //msg.counter = msg.counter+1;\n    flow.set('counter', msg.counter);\n    \n    if (msg.counter === 75){\n        flow.set('counter', 0);\n        msg.verbrauch = (flow.get('verbrauch')||0) +1;\n        flow.set('verbrauch', msg.verbrauch);\n    }\n}\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 570,
        "y": 140,
        "wires": [
            [
                "7ec24a9c.e3a754",
                "96978272.d33678",
                "172c8238.c12e06"
            ]
        ]
    },
    {
        "id": "96978272.d33678",
        "type": "debug",
        "z": "cb82b285.f3d9d8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "marker",
        "targetType": "msg",
        "x": 810,
        "y": 100,
        "wires": []
    },
    {
        "id": "2647eff5.997688",
        "type": "inject",
        "z": "cb82b285.f3d9d8",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 200,
        "y": 440,
        "wires": [
            [
                "29842ebd.0e6a82"
            ]
        ]
    },
    {
        "id": "29842ebd.0e6a82",
        "type": "influxdb in",
        "z": "cb82b285.f3d9d8",
        "influxdb": "52780328.1b9e5c",
        "name": "get last 6 values",
        "query": "SELECT counter FROM stomverbrauch GROUP BY * ORDER BY DESC LIMIT 6",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "x": 400,
        "y": 440,
        "wires": [
            [
                "fdb3afa2.0feaa8"
            ]
        ]
    },
    {
        "id": "fdb3afa2.0feaa8",
        "type": "debug",
        "z": "cb82b285.f3d9d8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 790,
        "y": 440,
        "wires": []
    },
    {
        "id": "172c8238.c12e06",
        "type": "switch",
        "z": "cb82b285.f3d9d8",
        "name": "",
        "property": "counter",
        "propertyType": "msg",
        "rules": [
            {
                "t": "btwn",
                "v": "0",
                "vt": "num",
                "v2": "75",
                "v2t": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 700,
        "y": 180,
        "wires": [
            [
                "131d3c8c.602003",
                "120066ce.575b09"
            ]
        ]
    },
    {
        "id": "131d3c8c.602003",
        "type": "debug",
        "z": "cb82b285.f3d9d8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 870,
        "y": 180,
        "wires": []
    },
    {
        "id": "120066ce.575b09",
        "type": "function",
        "z": "cb82b285.f3d9d8",
        "name": "variable umbauen",
        "func": "msg.raw = msg.payload;\nmsg.measurement = \"stomverbrauch\"\nmsg.payload = [{\n    marker: flow.get('marker')||0,\n    counter: flow.get('counter')||0,\n    verbrauch: flow.get('verbrauch')||0\n    },\n    {\n    DeviceType:\"nodeMCU\",\n    origin :\"stromzaehler\",\n    SensorType : \"tcrt5000\",\n    location : \"stromkastenkeller\"\n}];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 850,
        "y": 220,
        "wires": [
            [
                "6bbaaa0d.d7ec44"
            ]
        ]
    },
    {
        "id": "6bbaaa0d.d7ec44",
        "type": "influxdb out",
        "z": "cb82b285.f3d9d8",
        "influxdb": "52780328.1b9e5c",
        "name": "",
        "measurement": "",
        "precision": "",
        "retentionPolicy": "",
        "x": 1040,
        "y": 260,
        "wires": []
    },
    {
        "id": "dd073310.a8cd2",
        "type": "mqtt in",
        "z": "cc4c2641.73d7f8",
        "name": "",
        "topic": "tele/trocknermonitor/SENSOR",
        "qos": "2",
        "datatype": "auto",
        "broker": "1901392b.41301f",
        "x": 480,
        "y": 700,
        "wires": [
            [
                "9954f6d3.08d3a"
            ]
        ]
    },
    {
        "id": "bf6c35e2.6787c8",
        "type": "debug",
        "z": "cc4c2641.73d7f8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 1290,
        "y": 700,
        "wires": []
    },
    {
        "id": "1b9a3254.b4bbd6",
        "type": "mqtt in",
        "z": "cc4c2641.73d7f8",
        "name": "",
        "topic": "tele/waschmonitor/STATE",
        "qos": "2",
        "datatype": "auto",
        "broker": "1901392b.41301f",
        "x": 470,
        "y": 140,
        "wires": [
            [
                "272b1033.074bb8"
            ]
        ]
    },
    {
        "id": "b4efd48e.428d48",
        "type": "debug",
        "z": "cc4c2641.73d7f8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 830,
        "y": 140,
        "wires": []
    },
    {
        "id": "daabf6a4.5adad8",
        "type": "mqtt in",
        "z": "cc4c2641.73d7f8",
        "name": "",
        "topic": "tele/waschmonitor/SENSOR",
        "qos": "2",
        "datatype": "auto",
        "broker": "1901392b.41301f",
        "x": 480,
        "y": 200,
        "wires": [
            [
                "cd2c049e.faa498"
            ]
        ]
    },
    {
        "id": "1c7e138f.26d484",
        "type": "debug",
        "z": "cc4c2641.73d7f8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 1290,
        "y": 200,
        "wires": []
    },
    {
        "id": "3ad080d0.8618f",
        "type": "mqtt in",
        "z": "cc4c2641.73d7f8",
        "name": "",
        "topic": "stat/waschmonitor/RESULT",
        "qos": "2",
        "datatype": "auto",
        "broker": "1901392b.41301f",
        "x": 480,
        "y": 260,
        "wires": [
            [
                "ea42069b.84ea4"
            ]
        ]
    },
    {
        "id": "d50bced2.4d7a78",
        "type": "debug",
        "z": "cc4c2641.73d7f8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 830,
        "y": 260,
        "wires": []
    },
    {
        "id": "c3cee0ca.017458",
        "type": "mqtt in",
        "z": "cc4c2641.73d7f8",
        "name": "",
        "topic": "tele/trocknermonitor/STATE",
        "qos": "2",
        "datatype": "auto",
        "broker": "1901392b.41301f",
        "x": 480,
        "y": 640,
        "wires": [
            [
                "48ee7017.6761b8"
            ]
        ]
    },
    {
        "id": "aabba030.6e4568",
        "type": "debug",
        "z": "cc4c2641.73d7f8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 830,
        "y": 640,
        "wires": []
    },
    {
        "id": "82c62fb1.b9cac",
        "type": "mqtt in",
        "z": "cc4c2641.73d7f8",
        "name": "",
        "topic": "stat/trocknermonitor/RESULT",
        "qos": "2",
        "datatype": "auto",
        "broker": "1901392b.41301f",
        "x": 480,
        "y": 760,
        "wires": [
            [
                "c3cfd1f4.fa0218"
            ]
        ]
    },
    {
        "id": "131d789.a0acf07",
        "type": "debug",
        "z": "cc4c2641.73d7f8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 830,
        "y": 760,
        "wires": []
    },
    {
        "id": "2a885f65.888608",
        "type": "mqtt out",
        "z": "cc4c2641.73d7f8",
        "name": "",
        "topic": "cmnd/waschmonitor/POWER",
        "qos": "",
        "retain": "",
        "broker": "1901392b.41301f",
        "x": 490,
        "y": 80,
        "wires": []
    },
    {
        "id": "cde92f7a.4128d",
        "type": "inject",
        "z": "cc4c2641.73d7f8",
        "name": "",
        "topic": "",
        "payload": "OFF",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 100,
        "y": 80,
        "wires": [
            [
                "2a885f65.888608"
            ]
        ]
    },
    {
        "id": "4def99fe.ce98f8",
        "type": "inject",
        "z": "cc4c2641.73d7f8",
        "name": "",
        "topic": "",
        "payload": "ON",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 100,
        "y": 120,
        "wires": [
            [
                "2a885f65.888608"
            ]
        ]
    },
    {
        "id": "1b4ff635.689e3a",
        "type": "mqtt out",
        "z": "cc4c2641.73d7f8",
        "name": "",
        "topic": "cmnd/trocknermonitor/POWER",
        "qos": "",
        "retain": "",
        "broker": "1901392b.41301f",
        "x": 490,
        "y": 580,
        "wires": []
    },
    {
        "id": "27f8c994.01853e",
        "type": "inject",
        "z": "cc4c2641.73d7f8",
        "name": "",
        "topic": "",
        "payload": "OFF",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 100,
        "y": 580,
        "wires": [
            [
                "1b4ff635.689e3a"
            ]
        ]
    },
    {
        "id": "c2493dcd.e61e5",
        "type": "inject",
        "z": "cc4c2641.73d7f8",
        "name": "",
        "topic": "",
        "payload": "ON",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 100,
        "y": 620,
        "wires": [
            [
                "1b4ff635.689e3a"
            ]
        ]
    },
    {
        "id": "320e3671.47fb1a",
        "type": "inject",
        "z": "cc4c2641.73d7f8",
        "name": "",
        "topic": "",
        "payload": "10",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 90,
        "y": 340,
        "wires": [
            [
                "3c572e6a.bc9a82"
            ]
        ]
    },
    {
        "id": "3c572e6a.bc9a82",
        "type": "mqtt out",
        "z": "cc4c2641.73d7f8",
        "name": "",
        "topic": "cmnd/waschmonitor/TelePeriod",
        "qos": "",
        "retain": "",
        "broker": "1901392b.41301f",
        "x": 490,
        "y": 340,
        "wires": []
    },
    {
        "id": "aeb56e0d.adaee8",
        "type": "mqtt in",
        "z": "cc4c2641.73d7f8",
        "name": "",
        "topic": "tele/waschmonitor/LWT",
        "qos": "2",
        "datatype": "auto",
        "broker": "1901392b.41301f",
        "x": 460,
        "y": 40,
        "wires": [
            [
                "3af4a6f1.42913a"
            ]
        ]
    },
    {
        "id": "3af4a6f1.42913a",
        "type": "debug",
        "z": "cc4c2641.73d7f8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 830,
        "y": 40,
        "wires": []
    },
    {
        "id": "9a7bca51.9ea66",
        "type": "mqtt in",
        "z": "cc4c2641.73d7f8",
        "name": "",
        "topic": "tele/trocknermonitor/LWT",
        "qos": "2",
        "datatype": "auto",
        "broker": "1901392b.41301f",
        "x": 470,
        "y": 540,
        "wires": [
            [
                "e6a597dc.b01278"
            ]
        ]
    },
    {
        "id": "e6a597dc.b01278",
        "type": "debug",
        "z": "cc4c2641.73d7f8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 830,
        "y": 540,
        "wires": []
    },
    {
        "id": "b23585b.7e89d78",
        "type": "inject",
        "z": "cc4c2641.73d7f8",
        "name": "",
        "topic": "",
        "payload": "10",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 90,
        "y": 840,
        "wires": [
            [
                "1e6c104f.3ca048"
            ]
        ]
    },
    {
        "id": "1e6c104f.3ca048",
        "type": "mqtt out",
        "z": "cc4c2641.73d7f8",
        "name": "",
        "topic": "cmnd/trocknermonitor/TelePeriod",
        "qos": "",
        "retain": "",
        "broker": "1901392b.41301f",
        "x": 500,
        "y": 840,
        "wires": []
    },
    {
        "id": "cd2c049e.faa498",
        "type": "json",
        "z": "cc4c2641.73d7f8",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 690,
        "y": 200,
        "wires": [
            [
                "b87995ef.4625"
            ]
        ]
    },
    {
        "id": "9954f6d3.08d3a",
        "type": "json",
        "z": "cc4c2641.73d7f8",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 690,
        "y": 700,
        "wires": [
            [
                "cbb428d6.a7bc3"
            ]
        ]
    },
    {
        "id": "272b1033.074bb8",
        "type": "json",
        "z": "cc4c2641.73d7f8",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 690,
        "y": 140,
        "wires": [
            [
                "b4efd48e.428d48"
            ]
        ]
    },
    {
        "id": "ea42069b.84ea4",
        "type": "json",
        "z": "cc4c2641.73d7f8",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 690,
        "y": 260,
        "wires": [
            [
                "d50bced2.4d7a78"
            ]
        ]
    },
    {
        "id": "48ee7017.6761b8",
        "type": "json",
        "z": "cc4c2641.73d7f8",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 690,
        "y": 640,
        "wires": [
            [
                "aabba030.6e4568"
            ]
        ]
    },
    {
        "id": "c3cfd1f4.fa0218",
        "type": "json",
        "z": "cc4c2641.73d7f8",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 690,
        "y": 760,
        "wires": [
            [
                "131d789.a0acf07"
            ]
        ]
    },
    {
        "id": "f977208e.1bb998",
        "type": "mqtt out",
        "z": "cc4c2641.73d7f8",
        "name": "",
        "topic": "cmnd/waschmonitor/VoltageSet",
        "qos": "",
        "retain": "",
        "broker": "1901392b.41301f",
        "x": 490,
        "y": 400,
        "wires": []
    },
    {
        "id": "4bbb975b.56fa7",
        "type": "inject",
        "z": "cc4c2641.73d7f8",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 100,
        "y": 400,
        "wires": [
            [
                "f977208e.1bb998"
            ]
        ]
    },
    {
        "id": "b87995ef.4625",
        "type": "function",
        "z": "cc4c2641.73d7f8",
        "name": "Create influx Object",
        "func": "msg.measurement = \"waeschemonitoring\"\nmsg.payload = [{\n    voltage: msg.payload.ENERGY.Voltage,\n    current: msg.payload.ENERGY.Current,\n    power: msg.payload.ENERGY.Power,\n    totalPower: msg.payload.ENERGY.Total\n    },\n    {\n    tag1:\"smartPlug\",\n    tag2:\"waschkueche\",\n    type:\"smartplug\",\n    origin : \"waschmaschine\",\n    location : \"waschkueche\"\n}];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1000,
        "y": 200,
        "wires": [
            [
                "1c7e138f.26d484",
                "eacec716.01131"
            ]
        ]
    },
    {
        "id": "eacec716.01131",
        "type": "influxdb out",
        "z": "cc4c2641.73d7f8",
        "influxdb": "52780328.1b9e5c",
        "name": "",
        "measurement": "",
        "precision": "",
        "retentionPolicy": "",
        "x": 1300,
        "y": 140,
        "wires": []
    },
    {
        "id": "cbb428d6.a7bc3",
        "type": "function",
        "z": "cc4c2641.73d7f8",
        "name": "Create influx Object",
        "func": "msg.measurement = \"waeschemonitoring\"\nmsg.payload = [{\n    voltage: msg.payload.ENERGY.Voltage,\n    current: msg.payload.ENERGY.Current,\n    power: msg.payload.ENERGY.Power,\n    totalPower: msg.payload.ENERGY.Total\n    },\n    {\n    tag1:\"smartPlug\",\n    tag2:\"waschkueche\",\n    type:\"smartplug\",\n    origin : \"trockner\",\n    location : \"waschkueche\"\n}];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1000,
        "y": 700,
        "wires": [
            [
                "bf6c35e2.6787c8",
                "15623d33.6267cb"
            ]
        ]
    },
    {
        "id": "15623d33.6267cb",
        "type": "influxdb out",
        "z": "cc4c2641.73d7f8",
        "influxdb": "52780328.1b9e5c",
        "name": "",
        "measurement": "",
        "precision": "",
        "retentionPolicy": "",
        "x": 1300,
        "y": 660,
        "wires": []
    },
    {
        "id": "aee3fdf0.e08cb",
        "type": "mqtt in",
        "z": "6ac89b45.c8501c",
        "name": "CO2 NodeMCU collector",
        "topic": "wohnung/co2",
        "qos": "2",
        "datatype": "utf8",
        "broker": "1901392b.41301f",
        "x": 150,
        "y": 320,
        "wires": [
            [
                "446fce08.03a6c8"
            ]
        ]
    },
    {
        "id": "446fce08.03a6c8",
        "type": "function",
        "z": "6ac89b45.c8501c",
        "name": "Create influx Object",
        "func": "msg.array = msg.payload.split(\",\");\n\nmsg.origin =        msg.array[0].split(\": \")[1];\nmsg.co2 =   parseFloat(msg.array[1].split(\":\")[1]);\nmsg.co2t =      parseFloat(msg.array[2].split(\":\")[1]);\n\n\nif(msg.origin === \"weather2\"){\n    msg.location = \"schlafzimmer\";\n}else if (msg.origin === \"weather3\"){\n    msg.location = \"buero\";\n}else if (msg.origin === \"soilweather1\"){\n    msg.location = \"balkon\";\n}\n\nmsg.measurement = \"CO2Sensors\"\nmsg.payload = [{\n    CO2Concentration : msg.co2,\n    CO2SensorTemp : msg.co2t\n    },\n    {\n    DeviceType:\"nodeMCU\",\n    SensorType : \"MH-Z19B\",\n    origin : msg.origin,\n    location : msg.location\n}];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 460,
        "y": 320,
        "wires": [
            [
                "e523b71e.4d7cd8",
                "c5b0b166.3bbfd"
            ]
        ]
    },
    {
        "id": "e523b71e.4d7cd8",
        "type": "debug",
        "z": "6ac89b45.c8501c",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 670,
        "y": 320,
        "wires": []
    }
]